# Environment Variables

## Local Development (.env.local)
Create a `.env.local` file in the root directory for local development:

```bash
# Cloudflare
CLOUDFLARE_API_TOKEN=your_cloudflare_api_token
CLOUDFLARE_ACCOUNT_ID=your_cloudflare_account_id

# Database
DATABASE_URL=your_database_url

# Authentication (if needed)
AUTH_SECRET=your_auth_secret

# Development
NODE_ENV=development
LOG_LEVEL=debug
```

## Production (.env.production)
For production deployments:

```bash
# Cloudflare
CLOUDFLARE_API_TOKEN=your_prod_cloudflare_api_token
CLOUDFLARE_ACCOUNT_ID=your_prod_cloudflare_account_id

# Database
DATABASE_URL=your_prod_database_url

# Authentication
AUTH_SECRET=your_prod_auth_secret

# Production
NODE_ENV=production
LOG_LEVEL=warn
```

## Worker Environment (.env.worker)
For Cloudflare Workers:

```bash
# Worker-specific environment variables
MCP_API_KEY=your_mcp_api_key
ANALYSIS_CACHE_TTL=3600
```

## Usage

### Frontend (Astro)
Environment variables are automatically available in Astro components:

```astro
---
const apiUrl = import.meta.env.CLOUDFLARE_API_TOKEN;
---

<p>API Token: {apiUrl}</p>
```

### Workers
Use `import.meta.env` or the `wrangler.toml` vars section:

```typescript
// In workers
const apiKey = import.meta.env.MCP_API_KEY;
```

## Security Notes

- Never commit `.env*` files to version control
- Use different secrets for each environment
- Rotate secrets regularly
- Use Cloudflare's secret management for production