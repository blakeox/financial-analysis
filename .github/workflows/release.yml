name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm run build

      - name: Run tests
        run: pnpm run test

      - name: Generate changelog
        id: changelog
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")

          # Generate changelog from commits since last tag
          if [ "$LATEST_TAG" != "v0.0.0" ]; then
            CHANGES=$(git log --pretty=format:"* %s (%h)" $LATEST_TAG..HEAD)
          else
            CHANGES=$(git log --pretty=format:"* %s (%h)" --max-count=20)
          fi

          # Set output
          echo "changes<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "$CHANGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}

      - name: Publish to NPM (if applicable)
        if: contains(github.ref_name, 'v') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'alpha')
        run: |
          # Publish packages to NPM if configured
          echo "Publishing to NPM..."
          # Add npm publish commands here if needed
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify on Discord/Slack (optional)
        if: always()
        run: |
          # Add webhook notifications here if configured
          echo "Release ${{ github.ref_name }} completed"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
